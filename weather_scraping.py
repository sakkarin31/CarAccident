import time
import csv
from datetime import date, timedelta
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select, WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.common.exceptions import TimeoutException, NoSuchElementException

# Setup Chrome driver
options = webdriver.ChromeOptions()
options.add_argument("--headless=new")
options.add_argument("--disable-gpu")
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")

driver = webdriver.Chrome(
    service=Service(ChromeDriverManager().install()),
    options=options
)

# ‚ö†Ô∏è ‡πÅ‡∏Å‡πâ URL: ‡∏•‡∏ö space ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢!
url = "https://www.wunderground.com/history/daily/th/mueang-songkhla/VTSH"
driver.get(url)

wait = WebDriverWait(driver, 15)

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå CSV ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô header ‚Äî ‡∏°‡∏µ wind_speed_kmh ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
with open("songkhla_weather_2024.csv", "w", newline="", encoding="utf-8") as f:
    writer = csv.writer(f)
    writer.writerow(["date", "time", "temperature_F", "humidity_%", "wind_speed_kmh", "pressure_in", "condition"])

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
    start = date(2024, 1, 1)
    end = date(2024, 12, 31)

    # üëá ‡∏™‡∏£‡πâ‡∏≤‡∏á mapping ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    month_names = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ]

    while start <= end:
        print(f"Fetching: {start}")

        try:
            # ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ
            year_dropdown = wait.until(EC.presence_of_element_located((By.ID, "yearSelection")))
            Select(year_dropdown).select_by_visible_text(str(start.year))

            # ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‚Äî ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏ï‡πá‡∏° ‡πÄ‡∏ä‡πà‡∏ô "January"
            month_dropdown = wait.until(EC.presence_of_element_located((By.ID, "monthSelection")))
            Select(month_dropdown).select_by_visible_text(month_names[start.month - 1])  # üëà ‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ!

            # ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
            day_dropdown = wait.until(EC.presence_of_element_located((By.ID, "daySelection")))
            Select(day_dropdown).select_by_visible_text(str(start.day))

            # ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° View
            view_button = wait.until(EC.element_to_be_clickable((By.ID, "dateSubmit")))
            view_button.click()

            # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏´‡∏•‡∏î ‚Äî ‡∏£‡∏≠‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡πÉ‡∏ô tbody
            wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "table tbody tr")))

            # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            rows = driver.find_elements(By.CSS_SELECTOR, "table tbody tr")
            if not rows:
                print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {start}")
            else:
                for r in rows:
                    cols = r.find_elements(By.TAG_NAME, "td")
                    if len(cols) >= 10:
                        time_str = cols[0].text.strip()
                        temp = cols[1].text.replace(" ¬∞F", "").strip()
                        humidity = cols[3].text.replace(" %", "").strip()
                        # üëá ‡∏•‡∏ö‡∏´‡∏ô‡πà‡∏ß‡∏¢ "km/h" ‡πÅ‡∏•‡∏∞ "mph" ‡∏≠‡∏≠‡∏Å ‚Äî ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
                        wind_speed = cols[5].text.replace(" km/h", "").replace(" mph", "").strip()
                        pressure = cols[7].text.replace(" in", "").strip()
                        condition = cols[9].text.strip()

                        # üëá ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà M/D/YYYY ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows
                        formatted_date = f"{start.month}/{start.day}/{start.year}"

                        writer.writerow([
                            formatted_date,
                            time_str,
                            temp,
                            humidity,
                            wind_speed,
                            pressure,
                            condition
                        ])

                print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {start}")

        except (TimeoutException, NoSuchElementException) as e:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {start}: {str(e)}")

        # ‡πÑ‡∏õ‡∏ß‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        start += timedelta(days=1)
        time.sleep(1)  # ‡∏£‡∏≠ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏•‡∏î‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

# ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
driver.quit()
print("‚úÖ Done. Saved -> songkhla_weather_2024.csv")